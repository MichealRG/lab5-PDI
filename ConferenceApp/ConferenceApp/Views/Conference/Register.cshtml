@model ConferenceApp.Models.SetUsersInfo

@{
    ViewData["Title"] = "Register";
}

<h1>Register</h1>

<h4>ConferenceUser</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Register" id="formReg">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="User.FirstName" class="control-label"></label>
                <input asp-for="User.FirstName" class="form-control" />
                <span asp-validation-for="User.FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="User.LastName" class="control-label"></label>
                <input asp-for="User.LastName" class="form-control" />
                <span asp-validation-for="User.LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="User.Email" class="control-label"></label>
                <input asp-for="User.Email" class="form-control" />
                <span asp-validation-for="User.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="User.ConferenceType" class="control-label"></label>
                @*<input asp-for="ConferenceType" class="form-control" />*@


                <select asp-for="User.ConferenceType" class="form-control" asp-items="@Html.GetEnumSelectList<ConferenceType>()">
                    <option value="">---Wybierz--</option>

                </select>


                <span asp-validation-for="User.ConferenceType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.User.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User.ConferenceType)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Users)
        {
            <tr class="@if (ViewBag.Added==1) {
                @item.Color
            } ">
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ConferenceType)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                </td>
            </tr>
        }
    </tbody>
</table>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
@if (ViewBag.Message != null)
{
    <script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.Message");
            };
    </script>

}
